{
  "info": {
    "_postman_id": "5a851eae-dfb5-4c5c-abc8-e08c797eadaa",
    "name": "Express REST API",
    "description": "A collection for testing the Express REST API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Root Endpoint",
      "request": {
        "method": "GET",
        "url": {
          "raw": "http://localhost:3000/",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": [""]
        },
        "description": "Get the welcome message"
      },
      "response": []
    },
    {
      "name": "Get All Items",
      "request": {
        "method": "GET",
        "url": {
          "raw": "http://localhost:3000/items",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["items"]
        },
        "description": "Retrieve all items"
      },
      "response": []
    },
    {
      "name": "Get Single Item",
      "request": {
        "method": "GET",
        "url": {
          "raw": "http://localhost:3000/items/1",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["items", "1"]
        },
        "description": "Retrieve a single item by ID"
      },
      "response": []
    },
    {
      "name": "Create New Item",
      "request": {
        "method": "POST",
        "url": {
          "raw": "http://localhost:3000/items",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["items"]
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"name\": \"New Item\",\n    \"description\": \"Description of the new item\"\n}"
        },
        "description": "Create a new item"
      },
      "response": []
    },
    {
      "name": "Update Item",
      "request": {
        "method": "PUT",
        "url": {
          "raw": "http://localhost:3000/items/1",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["items", "1"]
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"name\": \"Updated Item\",\n    \"description\": \"Updated description\"\n}"
        },
        "description": "Update an item by ID"
      },
      "response": []
    },
    {
      "name": "Delete Item",
      "request": {
        "method": "DELETE",
        "url": {
          "raw": "http://localhost:3000/items/1",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["items", "1"]
        },
        "description": "Delete an item by ID"
      },
      "response": []
    },
    {
      "name": "Invalid Route",
      "request": {
        "method": "GET",
        "url": {
          "raw": "http://localhost:3000/invalid-route",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["invalid-route"]
        },
        "description": "Test the 404 error handling"
      },
      "response": []
    },
    {
      "name": "Invalid Item ID",
      "request": {
        "method": "GET",
        "url": {
          "raw": "http://localhost:3000/items/invalid",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["items", "invalid"]
        },
        "description": "Test invalid ID format error handling"
      },
      "response": []
    },
    {
      "name": "Invalid Request Body",
      "request": {
        "method": "POST",
        "url": {
          "raw": "http://localhost:3000/items",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["items"]
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"name\": \"\"\n}"
        },
        "description": "Test missing required fields error handling"
      },
      "response": []
    }
  ]
        }
